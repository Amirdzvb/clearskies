#!/usr/bin/env ruby
# Sample ClearSkies tracker server

require 'json'

trap 'INT' { server.shutdown }
trap 'TERM' { server.shutdown }

server = WEBRick::HTTPServer.new({
  :Port => ENV['PORT'] || 1234,
})


server.mount_proc '/' do |req,res|
  res.body = "This is the example ClearSkies tracker server\n"
end

class Tracker < Webrick::HTTPServlet::AbstractServlet
  @peers = {}

  TIMEOUT = 30

  def do_GET req, res
    q = req.query

    id = q[:id]
    peer = q[:peer]
    addr = req.remote_addr[2].to_s
    port = q[:myport]

    # FIXME Validate incoming parameters

    @peers[ q[:id] ] ||= {}

    now = Time.new.to_i
    @peers[id][peer] = [ addr, port, now ]

    others = []
    @peers[ q[:id] ].each do |peer_id,info|
      next if peer_id == peer
      next if info[2] + TIMEOUT < now
      others.push "#{peer_id}@#{info[0]}:#{info[1]}"
    end

    res.content_type = 'application/json'
    res.body = {
      your_ip: req.remote_addr.to_s,
      others: others,
      ttl: TIMEOUT
    }.to_json
  end
end

server.mount '/clearskies/track', Tracker

server.start
