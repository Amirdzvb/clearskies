#!/usr/bin/env ruby
# Sample ClearSkies tracker server

require 'json'
require 'webrick'

server = WEBrick::HTTPServer.new({
  :Port => ENV['PORT'] || 10234,
  :ReuseAddr => true,
})

trap('INT'){ server.shutdown }
trap('TERM'){ server.shutdown }

server.mount_proc '/' do |req,res|
  res.body = "This is the example ClearSkies tracker server\n"
end

class Tracker < WEBrick::HTTPServlet::AbstractServlet
  @@peers = {}

  TIMEOUT = 30

  def do_GET req, res
    q = req.query

    id = q["id"]
    peer = q["peer"]
    addr = req.remote_ip.to_s
    port = q["myport"]

    # FIXME Validate incoming parameters

    @@peers[id] ||= {}

    now = Time.new.to_i
    @@peers[id][peer] = [ addr, port, now ]

    p @@peers

    others = []
    @@peers[id].each do |peer_id,info|
      next if peer_id == peer
      next if info[2] + TIMEOUT < now
      others.push "#{peer_id}@#{info[0]}:#{info[1]}"
    end

    res.content_type = 'application/json'
    res.body = {
      your_ip: addr,
      others: others,
      ttl: TIMEOUT
    }.to_json
  end
end

server.mount '/clearskies/track', Tracker

server.start
