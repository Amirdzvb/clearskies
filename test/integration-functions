#!/bin/bash

logfile=/tmp/integration-log

function start_session()
{
  if [ -z "$TMUX" ]
  then
    tmux new-session $0
    status=$?
    FORCE_COLOR=1 test/combine-integration-logs "  test" $logfile "server" /tmp/1/log "client" /tmp/2/log | less -FSRX
    exit $status
  fi

  echo -n > $logfile
}

function log()
{
  echo `date +%H:%M:%S.%N` test "$@" >> $logfile
  echo "$@"
}

kill_pid()
{
  if test -e "$1"
  then
    kill `cat "$1"` 2>/dev/null
  fi
}

cleanup()
{
  kill_pid /tmp/1/pid
  kill_pid /tmp/2/pid

  sleep 0.1
  kill_pid "/tmp/testing/Client"
  kill_pid "/tmp/testing/Server"
}

error() {
  log "$@"
  read foo
  cleanup
  exit -1
}

ctrl_c()
{
  cleanup
  exit 1
}

run_program()
{
  mkdir -p /tmp/testing
  tempfile=/tmp/testing/`echo "$1" | tr ' ' '-'`

  tmux split-window -v "($2; sleep 100d) & echo \$! > $tempfile; wait \$!"
  tmux select-layout even-vertical
  tmux select-pane -t 0
}

launch_daemon()
{
  run_program "$1" "CLEARSKIES_DIR=/tmp/$2 ./clearskies start --no-fork"

  log "Waiting for $1 to start"
  while ! test -e /tmp/$2/control
  do
    sleep 0.1
  done
}

wait_file()
{
  log "Waiting for '$2' in $1"
  while ! test -e /tmp/$1/stuff/$2
  do
    sleep 0.1
  done
}

metadata()
{
  stat $1 | egrep -v '^\ *(File:|Device:|Access: 2|Change:)'
}

verify_synced()
{
  wait_file 1 $1
  wait_file 2 $1

  if ! diff -u /tmp/{1,2}/stuff/$1
  then
    error "$1 doesn't match"
  fi

  if ! diff -u <(metadata /tmp/1/stuff/$1) <(metadata /tmp/2/stuff/$1)
  then
    error "metadata for '$1' doesn't match"
  fi
}

wait_gone()
{
  log "Waiting for $1 to be deleted"
  while test -e "$1"
  do
    sleep 0.1
  done
}

verify_missing()
{
  wait_gone /tmp/1/stuff/$1
  wait_gone /tmp/2/stuff/$1
}

trap ctrl_c SIGINT
